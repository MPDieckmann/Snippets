"use strict";
var i18n = i18n || ((text) => text.toString());
function date(string, timestamp = new Date) {
    var d = (timestamp instanceof Date) ? timestamp : new Date(timestamp);
    return string.split("").map(string => string in date._functions ? date._functions[string](d).toString() : string).join("");
}
(function (date_1) {
    date_1.weekdays = [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
    ];
    date_1.months = [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
    ];
    function time(timestamp = new Date) {
        var d = (timestamp instanceof Date) ? timestamp : new Date(timestamp);
        return d.getTime();
    }
    date_1.time = time;
    date_1._functions = Object.create(null);
    function _leadingZero(value) {
        return value < 10 ? "0" + value : value.toString();
    }
    date_1._leadingZero = _leadingZero;
    date_1._functions.d = date => {
        return _leadingZero(date.getDate());
    };
    date_1._functions.D = date => {
        return i18n(date_1.weekdays[date.getDay()], "mpc").substr(0, 3);
    };
    date_1._functions.j = date => {
        return date.getDate();
    };
    date_1._functions.l = date => {
        return i18n(date_1.weekdays[date.getDay()], "mpc");
    };
    date_1._functions.N = date => {
        return date.getDay() == 0 ? 7 : date.getDay();
    };
    date_1._functions.S = date => {
        switch (date.getDate()) {
            case 1:
                return i18n("st", "mpc");
            case 2:
                return i18n("nd", "mpc");
            case 3:
                return i18n("rd", "mpc");
            default:
                return i18n("th", "mpc");
        }
    };
    date_1._functions.w = date => {
        return 7 == date.getDay() ? 0 : date.getDay();
    };
    date_1._functions.z = date => {
        return Math.floor((date.getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 864e5).toString();
    };
    date_1._functions.W = date => {
        var tmp_date = new Date(date.getTime() + 864e5 * (3 - (date.getDay() + 6) % 7));
        return Math.floor(1.5 + (tmp_date.getTime() - new Date(new Date(tmp_date.getFullYear(), 0, 4).getTime() + 864e5 * (3 - (new Date(tmp_date.getFullYear(), 0, 4).getDay() + 6) % 7)).getTime()) / 864e5 / 7);
    };
    date_1._functions.F = date => {
        return i18n(date_1.months[date.getMonth()], "mpc");
    };
    date_1._functions.m = date => {
        return _leadingZero(date.getMonth() + 1);
    };
    date_1._functions.M = date => {
        return i18n(date_1.months[date.getMonth()], "mpc").substr(0, 3);
    };
    date_1._functions.n = date => {
        return date.getMonth() + 1;
    };
    date_1._functions.t = date => {
        return 2 != date.getMonth() ? 9 == date.getMonth() || 4 == date.getMonth() || 6 == date.getMonth() || 11 == date.getMonth() ? "30" : "31" : date.getFullYear() % 4 == 0 && date.getFullYear() % 100 != 0 ? "29" : "28";
    };
    date_1._functions.L = date => {
        return date.getFullYear() % 4 == 0 && date.getFullYear() % 100 != 0 ? 1 : 0;
    };
    date_1._functions.o = date => {
        var tmp_d = new Date(date.toISOString());
        tmp_d.setDate(date.getDate() - (date.getDay() == 0 ? 7 : date.getDay()) + 1);
        return tmp_d.getFullYear();
    };
    date_1._functions.Y = date => {
        return date.getFullYear();
    };
    date_1._functions.y = date => {
        var year = date.getFullYear().toString();
        return year.substr(year.length - 2, 2);
    };
    date_1._functions.a = date => {
        if (date.getHours() > 12) {
            return i18n("pm", "mpc");
        }
        return i18n("am", "mpc");
    };
    date_1._functions.A = date => {
        if (date.getHours() > 12) {
            return i18n("PM", "mpc");
        }
        return i18n("AM", "mpc");
    };
    date_1._functions.B = () => {
        console.error("date(): B is currently not supported");
        return "B";
    };
    date_1._functions.g = date => {
        return date.getHours() > 12 ? date.getHours() - 11 : date.getHours() + 1;
    };
    date_1._functions.G = date => {
        return date.getHours() + 1;
    };
    date_1._functions.h = date => {
        return _leadingZero(date.getHours() > 12 ? date.getHours() - 11 : date.getHours() + 1);
    };
    date_1._functions.H = date => {
        return _leadingZero(date.getHours() + 1);
    };
    date_1._functions.i = date => {
        return _leadingZero(date.getMinutes());
    };
    date_1._functions.s = date => {
        return _leadingZero(date.getSeconds());
    };
    date_1._functions.u = date => {
        return date.getMilliseconds();
    };
    date_1._functions.v = date => {
        return date.getMilliseconds();
    };
    date_1._functions.e = () => {
        console.error("date(): e is currently not supported");
        return "e";
    };
    date_1._functions.I = () => {
        console.error("date(): I is currently not supported");
        return "I";
    };
    date_1._functions.O = () => {
        console.error("date(): O is currently not supported");
        return "O";
    };
    date_1._functions.P = () => {
        console.error("date(): P is currently not supported");
        return "P";
    };
    date_1._functions.T = () => {
        console.error("date(): T is currently not supported");
        return "T";
    };
    date_1._functions.Z = () => {
        console.error("date(): Z is currently not supported");
        return "Z";
    };
    date_1._functions.c = () => {
        console.error("date(): c is currently not supported");
        return "c";
    };
    date_1._functions.r = () => {
        console.error("date(): r is currently not supported");
        return "r";
    };
    date_1._functions.U = date => {
        return date.getTime();
    };
})(date || (date = {}));
//# sourceMappingURL=data:application/json;base64,